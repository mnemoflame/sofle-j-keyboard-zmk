#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&none                    &kp N1  &kp N2  &kp N3            &kp N4        &kp N5                  &kp UP_ARROW     &kp N6                 &kp N7           &kp N8         &kp N9   &kp N0    &none
&kp TAB                  &kp Q   &kp W   &kp F             &kp P         &kp B                   &kp DOWN_ARROW   &kp J                  &kp L            &kp U          &kp Y    &kp SEMI  &kp MINUS
&kp ESCAPE               &kp A   &kp R   &kp S             &kp T         &kp G                   &kp LEFT_ARROW   &kp M                  &kp N            &kp E          &kp I    &kp O     &kp APOS
&mt LA(LC(LSHFT)) GRAVE  &kp Z   &kp X   &kp C             &kp D         &kp V                   &kp RIGHT_ARROW  &kp K                  &kp H            &kp COMMA      &kp DOT  &kp FSLH  &mt RIGHT_GUI BACKSLASH
&caps_word               &none   &none   &kp LEFT_CONTROL  &lt 1 DELETE  &mt LEFT_SHIFT ENTER    &kp ENTER        &mt RIGHT_SHIFT SPACE  &lt 1 BACKSPACE  &kp RIGHT_ALT  &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans           &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans     &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans           &trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&trans  &kp LC(A)  &kp LC(C)  &kp UP     &kp LC(V)  &kp LC(LS(V))    &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL     &kp LEFT_BRACKET
&trans  &kp LC(Z)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LC(X)        &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &kp RIGHT_BRACKET
&trans  &trans     &trans     &trans     &trans     &trans           &trans  &trans  &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
